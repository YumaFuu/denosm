name: Release Binary

on:
  push:
    tags:
      - "v[0-9]+\\.[0-9]+\\.[0-9]+"

jobs:
  compile:
    name: Release Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Compile
        run: |
          deno compile -A --output ${{ matrix.target }} --target ${{ matrix.target }} index.js

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}


  release:
    name: Release Packages
    runs-on: ubuntu-latest
    needs:
      - compile
    steps:
      - uses: actions/checkout@v3

      - { uses: actions/download-artifact@v3, with: { name: x86_64-unknown-linux-gnu,  path: release/ } }
      - { uses: actions/download-artifact@v3, with: { name: x86_64-apple-darwin,       path: release/ } }
      - { uses: actions/download-artifact@v3, with: { name: aarch64-apple-darwin,      path: release/ } }

      # - name: Release
      #   run: |
      #     export VERSION=$(echo "$GITHUB_REF" | sed -e 's!refs/tags/!!')
      #     curl -L "https://github.com/tcnksm/ghr/releases/download/${GHR_VERSION}/ghr_${GHR_VERSION}_linux_amd64.tar.gz" | tar xvz
      #     "ghr_${GHR_VERSION}_linux_amd64/ghr" -u YumaFuu -r sm-deno -replace -n "$VERSION" "$VERSION" release/
      #   env:
      #     GHR_VERSION: v0.16.2
      #     GITHUB_TOKEN: ${{ github.token }}

      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: release/
          GITHUB_TOKEN: ${{ secret.GH_TOKEN }}
